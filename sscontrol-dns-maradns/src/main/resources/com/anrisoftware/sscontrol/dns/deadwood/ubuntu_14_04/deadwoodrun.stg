
deadwoodrun(args) ::= <<
#!/bin/bash
# chkconfig: 2345 55 45
# description: Deadwood is MaraDNS' recursive name server

#
# Copyright 2013-2014 Erwin MÃ¼ller \<erwin.mueller@deventm.org\>
#
# This file is part of sscontrol-dns-maradns.
#
# sscontrol-dns-maradns is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# sscontrol-dns-maradns is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
# for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with sscontrol-dns-maradns. If not, see \<http://www.gnu.org/licenses/\>.
#

# Must be a valid filename
NAME=deadwood
PIDFILE=/var/run/$NAME.pid
#This is the command to be run, give the full pathname
DAEMON=<args.deadwoodCommand>
DAEMON_OPTS=""
USER=<args.deadwoodUser>
GROUP=<args.deadwoodGroup>
CHROOT=<args.configurationDir>
CACHE_FILE="<args.cacheFile>"
START_STOP_ARGS="--quiet -m -b --chdir $CHROOT --pidfile $PIDFILE --exec $DAEMON -- $DAEMON_OPTS"

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

function startDaemon() {
    start-stop-daemon --start $START_STOP_ARGS
}

function stopDaemon() {
    start-stop-daemon --stop --oknodo --retry 30 --quiet --pidfile $PIDFILE --exec $DAEMON
}

function statusDaemon() {
    start-stop-daemon --status --pidfile $PIDFILE --exec $DAEMON
    ret=$?
    if [ $ret -ge 0 ] && [ $ret -lt 5 ]; then
        echo -n "Daemon: $NAME is not running"
    else
        echo -n "Daemon: $NAME not running"
        fi
    echo ", LSB return $ret."
    exit $ret
}

function reacheDaemon() {
    if [ -n "$CACHE_FILE" ]; then
        rm $CHROOT/$CACHE_FILE
        touch $CHROOT/$CACHE_FILE
        chown $GROUP.$USER $CHROOT/$CACHE_FILE
        chmod o-rw $CHROOT/$CACHE_FILE
    fi
}

case "$1" in
    start)
    echo -n "Starting daemon: "$NAME
    startDaemon
    echo "."
    ;;
    stop)
    echo -n "Stopping daemon: "$NAME
    stopDaemon
    echo "."
    ;;
    restart)
    echo -n "Restarting daemon: "$NAME
    startDaemon
    stopDaemon
    echo "."
    ;;
    status)
    statusDaemon
    ;;
    recache)
    stopDaemon
    reacheDaemon
    startDaemon
    ;;
     *)
    echo "Usage: "$1" {start|stop|restart|status|recache}"
    exit 1
esac

exit 0

>>
