insertDomains(properties, service) ::= <<
#!/bin/sh
<properties.mysqlCommand> --user=<service.database.user> --password=<service.database.password> -t \<\<'STOP'
USE <service.database.database>;
<service.domains:domainRow(properties)>\q
STOP
>>

domainRow(domain, properties) ::= <<
INSERT INTO `<properties.domainsTable>` (`<properties.domainField>`, `<properties.enabledField>`) VALUES
('<domain.name>', <enabledStr(domain.enabled)>)
ON DUPLICATE KEY UPDATE
`<properties.enabledField>`=<enabledStr(domain.enabled)>;

>>

resetDomains(properties, service) ::= <<
#!/bin/sh
<properties.mysqlCommand> --user=<service.database.user> --password=<service.database.password> -t \<\<'STOP'
USE <service.database.database>;
TRUNCATE TABLE `<properties.domainsTable>`;
STOP
>>

insertAliases(properties, service, domain) ::= <<
#!/bin/sh
<properties.mysqlCommand> --user=<service.database.user> --password=<service.database.password> -t \<\<'STOP'
USE <service.database.database>;
<domain.aliases:aliasRow(properties)>\q
STOP
>>

aliasRow(alias, properties) ::= <<
INSERT INTO `<properties.aliasesTable>` (`<properties.mailField>`, `<properties.destinationField>`, `<properties.enabledField>`) VALUES
('<aliasName(alias)>', '<aliasDestination(alias)>', <enabledStr(alias.enabled)>)
ON DUPLICATE KEY UPDATE
`<properties.destinationField>`='<aliasDestination(alias)>',
`<properties.enabledField>`=<enabledStr(alias.enabled)>;

>>

aliasName(alias) ::= <%
<if(alias.nameDomain)><alias.name><else><alias.name>@<alias.domain.name><endif>
%>

aliasDestination(alias) ::= <%
<if(alias.destinationDomain)><alias.destination><else><alias.destination>@<alias.domain.name><endif>
%>

resetAliases(properties, service) ::= <<
#!/bin/sh
<properties.mysqlCommand> --user=<service.database.user> --password=<service.database.password> -t \<\<'STOP'
USE <service.database.database>;
TRUNCATE TABLE `<properties.aliasesTable>`;
STOP
>>

insertUsers(properties, service, domain) ::= <<
#!/bin/sh
<properties.mysqlCommand> --user=<service.database.user> --password=<service.database.password> -t \<\<'STOP'
USE <service.database.database>;
<domain.users:userRow(properties)>\q
STOP
>>

userRow(user, properties) ::= <<
INSERT INTO `<properties.usersTable>` (`<properties.loginField>`, `<properties.nameField>`, `<properties.maildirField>`, `<properties.enabledField>`, `<properties.cryptField>`) VALUES
('<user.name>@<user.domain.name>', '<user.name>', '<user.name>/', <enabledStr(user.enabled)>, encrypt('<user.password>'))
ON DUPLICATE KEY UPDATE
`<properties.enabledField>`=<enabledStr(user.enabled)>,
`<properties.cryptField>`=encrypt('<user.password>');

>>

resetUsers(properties, service) ::= <<
#!/bin/sh
<properties.mysqlCommand> --user=<service.database.user> --password=<service.database.password> -t \<\<'STOP'
USE <service.database.database>;
TRUNCATE TABLE `<properties.usersTable>`;
STOP
>>

enabledStr(enabled) ::= <%
<if(enabled)>1<else>0<endif>
%>
