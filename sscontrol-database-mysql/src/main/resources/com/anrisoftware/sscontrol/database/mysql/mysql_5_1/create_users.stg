createUsers(args) ::= <<
# create database users
<args.mysqlCommand> --password=<args.password> -t \<\<"STOP"
<createUsersTemp(args)>
<args.users:grandDatabaseToUsers(args)>
FLUSH PRIVILEGES;
\q
STOP
>>

createUsersTemp(args) ::= <<
# create temporary database to add users
CREATE DATABASE IF NOT EXISTS createusertmp;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ANSI';
USE createusertmp;
DROP PROCEDURE IF EXISTS createusertmp.create_update_user;
DELIMITER $$
CREATE PROCEDURE createusertmp.create_update_user()
BEGIN
    DECLARE userexists BIGINT DEFAULT 0;
    <args.users:createUser(args)>

END ;$$
DELIMITER ;
CALL createusertmp.create_update_user();
DROP PROCEDURE IF EXISTS createusertmp.create_update_user;
DROP DATABASE IF EXISTS createusertmp;
SET SQL_MODE=@OLD_SQL_MODE;
>>

createUser(user, args) ::= <<

# user <user.name>@<userServer(user, args)>
SELECT COUNT(*) INTO userexists FROM mysql.user
    WHERE User='<user.name>' and  Host='<userServer(user, args)>';
IF userexists=0 THEN
    CREATE USER '<user.name>'@'<userServer(user, args)>' IDENTIFIED BY '<user.password>';
ELSEIF userexists=1 THEN
    SET PASSWORD FOR '<user.name>'@'<userServer(user, args)>' = PASSWORD('<user.password>');
END IF;
>>

grandDatabaseToUsers(user, args) ::= <<
<user.access:grandDatabase(user, args)>
>>


grandDatabase(access, user, args) ::= <<
# grand access "<user.name>@<userServer(user, args)>" to "<access.database>.*"
GRANT ALL ON <access.database>.* TO '<user.name>'@'<userServer(user, args)>';
>>

userServer(user, args) ::= <%
<if(user.server)><user.server><else><args.defaultUserServer><endif>
%>

