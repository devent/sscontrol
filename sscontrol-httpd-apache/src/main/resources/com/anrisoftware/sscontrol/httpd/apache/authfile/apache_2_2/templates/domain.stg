domainAuth(args) ::= <<
<!- args.auth -!>
<!- args.location -!>
<!- args.type -!>
<!- args.satisfy -!>
<!- args.requireDomains -!>
<!- args.requireValids -!>
<!- args.requireGroups -!>
<!- args.groupNames -!>
<!- args.passwordFile -!>
<!- args.groupFile -!>
# auth "<args.auth>"
\<Location <args.location>\>
    AuthType <args.type>
    AuthName "<args.auth>"
    <(args.type)(args)>
    <args.requireDomains:requireDomains();separator="\n">
    <args.requireValids:requireValids();separator="\n">
    <requireGroups(args.groupNames)>
    AuthUserFile <args.passwordFile>
    <authGroupFile(args)>
    <if(args.satisfy)>Satisfy <args.satisfy><endif>
\</Location>

>>

digest(args) ::= <<
AuthDigestProvider file
>>

basic(args) ::= <<
AuthBasicProvider file
>>

authGroupFile(args) ::= <%
<if(args.groupNames)>
AuthGroupFile <args.groupFile>
<endif>
%>

requireDomains(domains) ::= <<
AuthDigestDomain <domains:{domain | <domain.domain>};separator=" ">
>>

requireValids(valids) ::= <<
<valids:{ valid | <(valid)()>}>
>>

requireValidUser() ::= <<
Require valid-user
>>

requireGroups(groups) ::= <%
<if(groups)>
Require group <groups;separator=" ">
<endif>
%>
