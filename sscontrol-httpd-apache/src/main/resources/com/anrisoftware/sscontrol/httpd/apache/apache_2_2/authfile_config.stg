domainAuth(domain, properties, auth) ::= <<
# auth <auth.name>
\<Location /<auth.location>\>
    AuthType <if(auth.type)><auth.type><else><properties.defaultAuthType><endif>
    AuthName "<auth.name>"
    AuthDigestDomain <auth.domains;separator=" ">
    AuthDigestProvider <if(auth.provider)><auth.provider><else><properties.defaultAuthType><endif>
    AuthUserFile <properties.sitesDirectory>/<domain.name>/<properties.authSubdirectory>/<auth.passwordFileName>
    <authGroupFile(auth, properties, domain)>
    <auth.requires:{requires | <(requires.class.simpleName)(requires)>};separator="\n">
\</Location>

>>

authGroupFile(auth, properties, domain) ::= <%
<if(auth.groups)>
AuthGroupFile <properties.sitesDirectory>/<domain.name>/<properties.authSubdirectory>/<auth.location>.group
<endif>
%>

RequireValidUser(require) ::= <<
Require valid-user
>>

RequireValidGroup(require) ::= <<
Require group <require.name>
>>

groupFile(auth) ::= <<
<auth.groups: { groupp | <groupp.name>: <groupFileUser(groupp)> }>

>>

groupFileUser(groupp) ::= <%
<groupp.users: { user | <user.name>};separator=" ">
%>
