domainConfig(args) ::= <<
<! - args.properties - !>
<! - args.domain - !>
<! - args.proxy - !>
<! - args.location - !>
<! - args.errorPagesDir - !>
<! - args.setupProxyTimeouts - !>
<! - args.setupProxyHeaders - !>
<if(args.setupProxyTimeouts)><proxyTimeouts(args)><endif>
<if(args.setupProxyHeaders)><proxyHeaders(args)><endif>
location <args.location> {
    proxy_cache_key "$scheme://$host$request_uri";
    proxy_cache <args.proxy.proxyName>;
    proxy_pass <args.proxy.address>;
}

<if(args.proxy.cacheStaticFiles)>
location ~* <args.location>/.*\.(<args.properties.staticFiles;separator="|">)$ {
    proxy_cache_valid 200 <args.properties.proxyStaticCacheTime>;
    expires <args.properties.proxyExpireTime>;
    proxy_pass <args.proxy.address>;
    proxy_cache <args.proxy.proxyName>;
}
<endif>

<if(args.proxy.cacheFeeds)>
location ~* <args.location>/.*\/[^\/]+\/(feed|\.xml)\/? {
    # Cache RSS looking feeds
    proxy_cache_key "$scheme://$host$request_uri";
    proxy_cache_valid 200 <args.properties.proxyFeedsCacheTime>;
    proxy_cache <args.proxy.proxyName>;
    proxy_pass <args.proxy.address>;
}
<endif>

error_page 500 502 503 504 /50x.html;
location = /50x.html {
    root <args.errorPagesDir>;
}

>>

proxyTimeouts(args) ::= <<
# proxy timeouts
proxy_connect_timeout <args.properties.proxyConnectTimeout>;
proxy_read_timeout <args.properties.proxyReadTimeout>;
proxy_send_timeout <args.properties.proxySendTimeout>;

>>

proxyHeaders(args) ::= <<
# proxy headers
<({proxySetHeaders<args.domain.class.simpleName>})(args.properties)>
proxy_redirect <if(args.properties.proxyRedirect)>on<else>off<endif>;

>>

proxySetHeadersDomainImpl(properties) ::= <<
<properties.proxySetHeaders:proxySetHeaders();separator="\n">
>>

proxySetHeadersSslDomainImpl(properties) ::= <<
<properties.proxySetSslHeaders:proxySetHeaders();separator="\n">
>>

proxySetHeaders(header) ::= <%
proxy_set_header <header>;
%>

proxyCacheConf(proxy, properties) ::= <<
# - Robobee Proxy for "<proxy.proxyName>" -
# - Auto-generated -
#

proxy_cache_path <properties.proxyCacheDir>/<proxy.proxyName> levels=1:2 keys_zone=<proxy.proxyName>:<properties.proxyCacheSize> max_size=<properties.proxyCacheMaximumSize>;

>>
