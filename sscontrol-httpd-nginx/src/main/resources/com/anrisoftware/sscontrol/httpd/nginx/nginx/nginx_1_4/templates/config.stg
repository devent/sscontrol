DomainImpl(properties) ::= <<
server {
    # domain <properties.domain.name>
    <domainBody(properties)>
    <properties.servicesConfig;separator="\n">
}

>>

SslDomainImpl(properties) ::= <<
server {
    # SSL/domain <properties.domain.name>
    <domainBody(properties)>
    <domainCerts(properties)>
    <properties.servicesConfig;separator="\n">
}

>>

domainBody(properties) ::= <<
listen <properties.domain.address>:<properties.domain.port>;
root <properties.script.sitesDirectory>/<properties.domain.siteDirectory>;
index <properties.script.indexFiles;separator=" ">;
server_name <properties.domain.name>;
client_max_body_size <properties.upload>;

>>

domainCerts(properties) ::= <<
ssl on;
ssl_certificate <properties.script.sitesDirectory>/<properties.domain.name>/<properties.script.sslSubdirectory>/<properties.domain.certificationFile>;
ssl_certificate_key <properties.script.sitesDirectory>/<properties.domain.name>/<properties.script.sslSubdirectory>/<properties.domain.certificationKeyFile>;
ssl_session_timeout <properties.script.sslSessionTimeout>;
ssl_protocols <properties.script.sslProtocols;separator=" ">;
ssl_ciphers <properties.script.sslCiphers;separator=":">;
ssl_prefer_server_ciphers on;

>>

robobeeConfig(properties) ::= <<
# - Robobee Include Configuration -
# - Auto-generated -
#

gzip <if(properties.domainCompression)>on<else>off<endif>;
gzip_comp_level <properties.compressionLevel>;
gzip_min_length <properties.compressionMinSize>;
gzip_vary <if(properties.compressionVary)>on<else>off<endif>;
gzip_types <properties.compressionTypes;separator=" ">;
gzip_disable "<properties.compressionException>";
gzip_http_version <properties.compressionHttpVersion>;

>>

sitesConfig(properties) ::= <<
# - Robobee Include Sites -
# - Auto-generated -
#

include <properties.sitesEnabledDir>/*.conf;

>>

errorLog_search() ::= <%
error_log\s+.*?;
%>

errorLog(debug) ::= <%
error_log <debug>;
%>

