insertDomains(args) ::= <<
<! - args.mysqlCommand - !>
<! - args.database - !>
<! - args.domains - !>
<args.mysqlCommand> --user=<args.database.user> --password=<args.database.password> -t \<\<'STOP'
USE <args.database.database>;
<args.domains:domainRow(args)>\q
STOP
>>

domainRow(domain, args) ::= <<
<! - args.domainsTable - !>
<! - args.domainField - !>
<! - args.enabledField - !>
INSERT INTO `<args.domainsTable>` (`<args.domainField>`, `<args.enabledField>`) VALUES
('<domain.name>', <enabledStr(domain.enabled)>)
ON DUPLICATE KEY UPDATE
`<args.enabledField>`=<enabledStr(domain.enabled)>;

>>

resetDomains(args) ::= <<
<! - args.mysqlCommand - !>
<! - args.database - !>
<! - args.domainsTable - !>
<args.mysqlCommand> --user=<args.database.user> --password=<args.database.password> -t \<\<'STOP'
USE <args.database.database>;
TRUNCATE TABLE `<args.domainsTable>`;
STOP
>>

insertAliases(args) ::= <<
<! - args.mysqlCommand - !>
<! - args.database - !>
<! - args.domain - !>
<args.mysqlCommand> --user=<args.database.user> --password=<args.database.password> -t \<\<'STOP'
USE <args.database.database>;
<args.domain.aliases:aliasRow(args)>\q
STOP
>>

aliasRow(alias, args) ::= <<
<! - args.aliasesTable - !>
<! - args.mailField - !>
<! - args.destinationField - !>
<! - args.enabledField - !>
INSERT INTO `<args.aliasesTable>` (`<args.mailField>`, `<args.destinationField>`, `<args.enabledField>`) VALUES
('<aliasName(alias)>', '<aliasDestination(alias)>', <enabledStr(alias.enabled)>)
ON DUPLICATE KEY UPDATE
`<args.destinationField>`='<aliasDestination(alias)>',
`<args.enabledField>`=<enabledStr(alias.enabled)>;

>>

aliasName(alias) ::= <%
<if(alias.nameDomain)><alias.name><else><alias.name>@<alias.domain.name><endif>
%>

aliasDestination(alias) ::= <%
<if(alias.destinationDomain)><alias.destination><else><alias.destination>@<alias.domain.name><endif>
%>

resetAliases(args) ::= <<
<! - args.mysqlCommand - !>
<! - args.database - !>
<! - args.aliasesTable - !>
<args.mysqlCommand> --user=<args.database.user> --password=<args.database.password> -t \<\<'STOP'
USE <args.database.database>;
TRUNCATE TABLE `<args.aliasesTable>`;
STOP
>>

insertUsers(args) ::= <<
<! - args.mysqlCommand - !>
<! - args.database - !>
<! - args.domain - !>
<args.mysqlCommand> --user=<args.database.user> --password=<args.database.password> -t \<\<'STOP'
USE <args.database.database>;
<args.domain.users:userRow(args)>\q
STOP
>>

userRow(user, args) ::= <<
<! - args.usersTable - !>
<! - args.loginField - !>
<! - args.nameField - !>
<! - args.maildirField - !>
<! - args.enabledField - !>
<! - args.cryptField - !>
INSERT INTO `<args.usersTable>` (`<args.loginField>`, `<args.nameField>`, `<args.maildirField>`, `<args.enabledField>`, `<args.cryptField>`) VALUES
('<user.name>@<user.domain.name>', '<user.name>', '<user.name>/', <enabledStr(user.enabled)>, encrypt('<user.password>'))
ON DUPLICATE KEY UPDATE
`<args.enabledField>`=<enabledStr(user.enabled)>,
`<args.cryptField>`=encrypt('<user.password>');

>>

resetUsers(args) ::= <<
<! - args.mysqlCommand - !>
<! - args.database - !>
<! - args.usersTable - !>
<args.mysqlCommand> --user=<args.database.user> --password=<args.database.password> -t \<\<'STOP'
USE <args.database.database>;
TRUNCATE TABLE `<args.usersTable>`;
STOP
>>

enabledStr(enabled) ::= <%
<if(enabled)>1<else>0<endif>
%>
