createAliasesTable(mysqlCommand, service) ::= <<
<! creates the aliases table !>
#!/bin/sh
<mysqlCommand> --user=<service.database.user> --password=<service.database.password> -t \<\<STOP
USE <service.database.database>;
CREATE TABLE IF NOT EXISTS \`aliases\` (
\`pkid\` smallint(3) NOT NULL auto_increment,
\`mail\` varchar(120) NOT NULL default '',
\`destination\` varchar(120) NOT NULL default '',
\`enabled\` tinyint(1) NOT NULL default '1',
PRIMARY KEY (\`pkid\`));

<createIndexIfNotExists("aliases", "mail", "aliases_index")>
\q
STOP
>>

createDomainsTable(mysqlCommand, service) ::= <<
<! creates the domains table !>
#!/bin/sh
<mysqlCommand> --user=<service.database.user> --password=<service.database.password> -t \<\<STOP
USE <service.database.database>;
CREATE TABLE IF NOT EXISTS \`domains\` (
\`pkid\` smallint(6) NOT NULL auto_increment,
\`domain\` varchar(120) NOT NULL default '',
\`transport\` varchar(120) NOT NULL default 'virtual:',
\`enabled\` tinyint(1) NOT NULL default '1',
PRIMARY KEY (\`pkid\`) ) ;

<createIndexIfNotExists("domains", "domain", "domains_index")>
\q
STOP
>>

createUsersTable(mysqlCommand, service, profile) ::= <<
<! creates the users table !>
#!/bin/sh
<mysqlCommand> --user=<service.database.user> --password=<service.database.password> -t \<\<STOP
USE <service.database.database>;
CREATE TABLE IF NOT EXISTS \`users\` (
\`pkid\` smallint(6) NOT NULL auto_increment,
\`id\` varchar(128) NOT NULL default '',
\`name\` varchar(128) NOT NULL default '',
\`uid\` smallint(5) unsigned NOT NULL default '<profile.virtualUid>',
\`gid\` smallint(5) unsigned NOT NULL default '<profile.virtualGid>',
\`home\` varchar(255) NOT NULL default '<profile.mailboxBaseDir>',
\`maildir\` varchar(255) NOT NULL,
\`enabled\` tinyint(3) unsigned NOT NULL default '1',
\`change_password\` tinyint(3) unsigned NOT NULL default '1',
\`clear\` varchar(128) NOT NULL default 'ChangeMe',
\`crypt\` varchar(128) NOT NULL default 'sdtrusfX0Jj66',
\`quota\` varchar(255) NOT NULL default '',
\`procmailrc\` varchar(128) NOT NULL default '',
\`spamassassinrc\` varchar(128) NOT NULL default '',
PRIMARY KEY (\`pkid\`));

<createIndexIfNotExists("users", "id", "users_index")>
\q
STOP
>>

createIndexIfNotExists(table, column, indexName) ::= <<
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ANSI';
DROP PROCEDURE IF EXISTS create_index;
DELIMITER $$
CREATE PROCEDURE create_index()
BEGIN
    DECLARE indexexists BIGINT DEFAULT 0;
    SELECT COUNT(*) INTO indexexists FROM information_schema.statistics
        WHERE TABLE_SCHEMA = DATABASE()
        AND table_name = '<table>' AND index_name = '<indexName>';
    IF indexexists = 0 THEN
        CREATE UNIQUE INDEX \`<indexName>\`
        ON \`<table>\` (\`<column>\`);
    END IF;
END ;$$
DELIMITER ;
CALL create_index();
DROP PROCEDURE IF EXISTS create_index;
SET SQL_MODE=@OLD_SQL_MODE;
>>
