domainAuth(domain, properties, auth) ::= <<
# auth "<auth.name>"
\<Location <auth.location>\>
    <(auth.type)(auth)>
    AuthUserFile <properties.sitesDirectory>/<domain.name>/<properties.authSubdirectory>/<auth.passwordFileName>
    <authGroupFile(auth, properties, domain)>
    <auth.requires:{requires | <(requires.class.simpleName)(requires)>};separator="\n">
\</Location>

>>

digest(auth) ::= <<
AuthType <auth.type>
AuthName "<auth.name>"
AuthDigestDomain <auth.domains;separator=" ">
AuthDigestProvider <auth.provider>
>>

authGroupFile(auth, properties, domain) ::= <%
<if(auth.groups)>
AuthGroupFile <properties.sitesDirectory>/<domain.name>/<properties.authSubdirectory>/<auth.locationFilename>.group
<endif>
%>

RequireValidUser(require) ::= <<
Require valid-user
>>

RequireValidGroup(require) ::= <<
Require group <require.name>
>>

groupFile(auth) ::= <<
<auth.groups: { groupp | <groupp.name>: <groupFileUser(groupp)> }>

>>

groupFileUser(groupp) ::= <%
<groupp.users: { user | <user.name>};separator=" ">
%>
