domainConfig(args) ::= <<
<! - args.domain - !>
<! - args.alias - !>
<! - args.domainName - !>
<! - args.prefix - !>
<! - args.aliasTarget - !>
<! - args.redminePublicDirectory - !>
# Redmine "<args.prefix>", Domain <args.domain.name>
location <args.alias> {
    <aliasTarget(args)>
    try_files $uri @cluster_<args.domainName>_<args.prefix>;
}

location @cluster_<args.domainName>_<args.prefix> {
    proxy_pass http://thin_<args.domainName>_<args.prefix>;
}

>>

aliasTarget(args) ::= <%
<if(args.aliasTarget)>alias <args.redminePublicDirectory>;<endif>
%>

upstreamConfig(args) ::= <<
<! - args.domain - !>
<! - args.sockets - !>
<! - args.domainName - !>
<! - args.prefix - !>
# Thin "<args.prefix>", Domain <args.domain.name>
upstream thin_<args.domainName>_<args.prefix> {
    <args.sockets:upstreamServer();separator="\n">
}

>>

upstreamServer(socket) ::= <%
server unix:<socket>;
%>
