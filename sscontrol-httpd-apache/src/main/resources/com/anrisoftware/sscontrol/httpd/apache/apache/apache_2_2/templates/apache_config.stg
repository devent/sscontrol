DomainImpl(properties, domain, servicesConfig) ::= <<
\<VirtualHost <domain.address>:<domain.port>\>

    <domainBody(properties, domain)>

    <servicesConfig;separator="\n">
\</VirtualHost>

>>

SslDomainImpl(properties, domain, servicesConfig) ::= <<
\<VirtualHost <domain.address>:<domain.port>\>

    <domainBody(properties, domain)>

    <domainCerts(properties, domain)>

    <servicesConfig;separator="\n">
\</VirtualHost>

>>

domainBody(properties, domain) ::= <<
# domain <domain.name>
ServerName <domain.name>
DocumentRoot <properties.sitesDirectory>/<domain.siteDirectory>
SuexecUserGroup <domain.domainUser.name> <domain.domainUser.group>
\<Directory <properties.sitesDirectory>/<domain.siteDirectory>\>
    AllowOverride None
    Order allow,deny
    Allow from all
\</Directory>
>>

domainCerts(properties, domain) ::= <<
SSLEngine on
SSLCertificateFile <properties.sitesDirectory>/<domain.name>/<properties.sslSubdirectory>/<domain.certResource;format="fileName">
SSLCertificateKeyFile <properties.sitesDirectory>/<domain.name>/<properties.sslSubdirectory>/<domain.keyResource;format="fileName"><domainCA(properties, domain)>
>>

domainCA(properties, domain) ::= <%
<if(domain.caResource)><\n>SSLCACertificateFile <properties.sitesDirectory>/<domain.name>/<properties.sslSubdirectory>/<domain.caResource;format="fileName"><endif>
%>

domainAlias(properties, domain) ::= <<
Alias / <documentRoot(properties, domain)><domain.documentRoot>/
>>

documentRoot(properties, domain) ::= <<
<if(domain.useDomain)><properties.sitesDirectory>/<domain.useDomain>/web
<else><properties.sitesDirectory>/<domain.name>/web<endif>
>>
